============================= test session starts ==============================
platform darwin -- Python 3.9.6, pytest-8.1.1, pluggy-1.4.0 -- /Users/yujin/PycharmProjects/Android_automation/.venv/bin/python
cachedir: .pytest_cache
metadata: {'Python': '3.9.6', 'Platform': 'macOS-14.2.1-arm64-arm-64bit', 'Packages': {'pytest': '8.1.1', 'pluggy': '1.4.0'}, 'Plugins': {'html': '4.1.1', 'metadata': '3.1.1', 'allure-pytest': '2.13.5'}}
rootdir: /Users/yujin/PycharmProjects/Android_automation/인증_renewal
plugins: html-4.1.1, metadata-3.1.1, allure-pytest-2.13.5
collecting ... collected 6 items

간편번호설정.py::test_간편번호우회 PASSED
간편번호설정.py::test_본인인증 PASSED
간편번호설정.py::test_MO인증 PASSED
간편번호설정.py::test_로카페이설정 PASSED
간편번호설정.py::test_간편번호설정 PASSED
간편번호설정.py::test_앱메인호출 FAILED

=================================== FAILURES ===================================
__________________________________ test_앱메인호출 __________________________________

driver = <appium.webdriver.webdriver.WebDriver (session="d20840d7-09df-463a-a1d9-be4eab6540c2")>

    def test_앱메인호출(driver)->None:
        driver.find_element(By.ID, 변수_인증renewal.닫기).click()
        time.sleep(5)
>       driver.find_element(By.ID, 변수_인증renewal.관심사수집닫기).click()

간편번호설정.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.venv/lib/python3.9/site-packages/appium/webdriver/webdriver.py:383: in find_element
    return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']
../.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x142c3ccd0>
response = {'status': 500, 'value': '{"value":{"error":"unknown error","message":"An unknown server-side error occurred while pro...tory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\\n\\tat java.lang.Thread.run(Thread.java:1012)\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """
        https://www.w3.org/TR/webdriver/#errors
        """
        payload = response.get('value', '')
        if isinstance(payload, dict):
            payload_dict = payload
        else:
            try:
                payload_dict = json.loads(payload)
            except (json.JSONDecodeError, TypeError):
                return
            if not isinstance(payload_dict, dict):
                return
        value = payload_dict.get('value')
        if not isinstance(value, dict):
            return
        error = value.get('error')
        if not error:
            return
    
        message = value.get('message', error)
        stacktrace = value.get('stacktrace', '')
        # In theory, we should also be checking HTTP status codes.
        # Java client, for example, prints a warning if the actual `error`
        # value does not match to the response's HTTP status code.
        exception_class: Type[sel_exceptions.WebDriverException] = ERROR_TO_EXC_MAPPING.get(
            error, sel_exceptions.WebDriverException
        )
        if exception_class is sel_exceptions.WebDriverException and message:
            if message == 'No such context found.':
                exception_class = appium_exceptions.NoSuchContextException
            elif message == 'That command could not be executed in the current context.':
                exception_class = appium_exceptions.InvalidSwitchToTargetException
    
        if exception_class is sel_exceptions.UnexpectedAlertPresentException:
            raise sel_exceptions.UnexpectedAlertPresentException(
                msg=message,
                stacktrace=format_stacktrace(stacktrace),
                alert_text=value.get('data'),
            )
>       raise exception_class(msg=message, stacktrace=format_stacktrace(stacktrace))
E       selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: Cannot rewrite element locator 'btn_관심사수집_close' to its complete form, because the current application package name is unknown. Consider providing the app package name or changing the locator to '<package_name>:id/btn_관심사수집_close' format.
E       Stacktrace:
E       io.appium.uiautomator2.common.exceptions.UiAutomator2Exception: Cannot rewrite element locator 'btn_관심사수집_close' to its complete form, because the current application package name is unknown. Consider providing the app package name or changing the locator to '<package_name>:id/btn_관심사수집_close' format.
E       	at io.appium.uiautomator2.utils.ElementLocationHelpers.rewriteIdLocator(ElementLocationHelpers.java:77)
E       	at io.appium.uiautomator2.handler.FindElement.findElement(FindElement.java:87)
E       	at io.appium.uiautomator2.handler.FindElement.safeHandle(FindElement.java:71)
E       	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:41)
E       	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:261)
E       	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:255)
E       	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
E       	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
E       	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
E       	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
E       	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)
E       	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)
E       	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)
E       	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
E       	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
E       	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
E       	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
E       	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
E       	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
E       	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
E       	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
E       	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
E       	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
E       	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
E       	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
E       	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
E       	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
E       	at java.lang.Thread.run(Thread.java:1012)

../.venv/lib/python3.9/site-packages/appium/webdriver/errorhandler.py:125: WebDriverException
=============================== warnings summary ===============================
../.venv/lib/python3.9/site-packages/urllib3/__init__.py:35
  /Users/yujin/PycharmProjects/Android_automation/.venv/lib/python3.9/site-packages/urllib3/__init__.py:35: NotOpenSSLWarning: urllib3 v2 only supports OpenSSL 1.1.1+, currently the 'ssl' module is compiled with 'LibreSSL 2.8.3'. See: https://github.com/urllib3/urllib3/issues/3020
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED 간편번호설정.py::test_앱메인호출 - selenium.common.exceptions.WebDrive...
============== 1 failed, 5 passed, 1 warning in 90.35s (0:01:30) ===============
